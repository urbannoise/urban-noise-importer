trigger:
- master
- release/*

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  BuildConfiguration: Release
  BuildPlatform: Any CPU

steps:
# Build projects to verify everything is compiling
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'


# Build source, tests and run tests with coverage
- script: |
    dotnet test ./UrbanNoise.Importer.Components.Tests/UrbanNoise.Importer.Components.Tests.csproj -c Debug --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
  displayName: Run tests with coverage

# Upload coverage to codecov.io
- script: |
    bash <(curl -s https://codecov.io/bash)
  displayName: 'Upload to codecov.io'

# SonarCloud preparations (madatory)
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud Azure DevOps'
    organization: 'urbannoise'
    scannerMode: 'MSBuild'
    projectKey: 'urbannoise_urban-noise-importer-components'
    projectName: 'urban-noise-importer-components'

# SonarCloud Analysis
- task: SonarCloudAnalyze@1

# Sonarcloud to publish the results
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

# Publish artifact
- task: DotNetCoreCLI@2
  displayName: 'Publish'
  condition: ne(variables['system.pullrequest.isfork'], true)
  inputs:
    command: publish
    publishWebProjects: false
    arguments: '-o "$(build.artifactstagingdirectory)/Publish" --configuration $(BuildConfiguration) --no-build --no-restore'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  condition: ne(variables['system.pullrequest.isfork'], true)
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/Publish'
    ArtifactName: 'Function'




